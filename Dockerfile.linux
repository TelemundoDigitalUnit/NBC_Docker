# see docker-compose.linux.yml

# The reason `apt-get install` is always preceded by `apt-get update` is because the layer which ran `apt-get update`
# when first building the image gets cached and doesn't run again when adding more layers later.

FROM ubuntu:latest

SHELL ["/bin/bash", "-c"]

# This prevents `debconf: unable to initialize frontend: Dialog`, etc.
ENV DEBIAN_FRONTEND=noninteractive

# Installing apt-utils first prevents subsequent `debconf: delaying package configuration, since apt-utils is not installed`
RUN apt-get update && apt-get install -y --quiet apt-utils && apt-get clean

# Upgrade system packages
RUN apt-get update && apt-get upgrade -y --quiet --fix-broken && apt-get clean -y --quiet && apt-get clean

# Install curl (needed for nvm, npm, docker-compose, composer)
RUN apt-get update && apt-get install -y --quiet curl && apt-get clean

# Install make (needed for byline-manager plugin)
RUN apt-get update && apt-get install -y --quiet build-essential && apt-get clean

# Install zip and unzip (needed by something in local_init.sh)
RUN apt-get update && apt-get install -y --quiet zip unzip && apt-get clean

# Install and configure git
RUN apt-get update && apt-get install -y --quiet git && git config --global credential.helper store && apt-get clean

# Install ssh server
RUN apt-get update && apt-get install --quiet -y ssh openssh-server && apt-get clean

# Install DB
RUN apt-get update && apt-get install -y --quiet mariadb-client mariadb-server && apt-get clean

# Install user tools
RUN apt-get update && apt-get install -y --quiet sudo mlocate vim nano fish && apt-get clean

# Install nvm and node https://github.com/nvm-sh/nvm
# Unclear why this doesn't install npm:
# https://stackoverflow.com/a/33874050/2407309
# https://stackoverflow.com/a/10094496/2407309
RUN curl --fail --silent --show-error --location https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
RUN source ~/.nvm/nvm.sh && nvm install 8 && nvm use 8

# Install npm https://github.com/nodesource/distributions/blob/master/README.md#debinstall
RUN curl --fail --silent --show-error --location https://deb.nodesource.com/setup_13.x | bash
#RUN apt-get update && apt-get install -y --quiet nodejs && apt-get clean && npm config set proxy $http_proxy && npm install -g npx && npm update
RUN apt-get update && apt-get install -y --quiet nodejs && npm config set proxy $http_proxy && npm update && apt-get clean

# Install nginx
RUN apt-get update && apt-get install -y --quiet nginx && apt-get clean

# Install PHP (needed for Composer) - note that installing php7.3 also installs apache2, so install php7.3-fpm
RUN apt-get update && apt-get install -y --quiet software-properties-common && add-apt-repository ppa:ondrej/php && apt-get update && apt-get install -y --quiet php7.3-common php7.3-fpm php7.3-mysql php7.3-cli php7.3-xml php7.3-zip php7.3-curl php7.3-mbstring php7.3-soap && apt-get clean

# Install Composer https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md
RUN curl --fail --silent --show-error --location https://getcomposer.org/installer | php
RUN mv /composer.phar /usr/local/bin/composer

# Install WordPress etc (php-curl is required for wp cli update)
WORKDIR /our/wp-container
RUN curl --fail --silent --show-error --location https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar --output /usr/local/bin/wp && chmod a+x /usr/local/bin/wp && wp cli update && wp core download --allow-root --skip-themes --skip-content --version=5.2.4 && rm -rf wp-content

RUN apt-get update && apt-get install -y --quiet yarn && apt-get clean

# Which ports need to be published
EXPOSE 22
EXPOSE 80
EXPOSE 443
EXPOSE 3306
EXPOSE 8889
EXPOSE 9000
EXPOSE 11211

# symlink default docroot to our
RUN rm -rf /var/www/html && ln -snf /our/wp-container /var/www/html

# Make necessary files from host available in container
WORKDIR /our
COPY .env .
COPY conf/public_key.pub /root/.ssh/authorized_keys
COPY conf/nginx/certs /etc/nginx/ssl
COPY conf/nginx/nginx.conf /etc/nginx/sites-available/default
COPY conf/php.ini /usr/local/etc/php/conf.d/wp.ini
COPY local_init.linux.sh local_init.linux.sh

ENTRYPOINT set -a source .env && set -a source /root/.nvm/nvm.sh && service mysql start && service ssh start && service php7.3-fpm start && service nginx start && cd /our && bash
